"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[3160],{6808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(83117),o=(n(67294),n(3905));const i={id:"becomequoter",title:"Become a Quoter",sidebar_position:2},a="Quoting During UniswapX Beta",s={unversionedId:"contracts/uniswapx/guides/becomequoter",id:"contracts/uniswapx/guides/becomequoter",title:"Become a Quoter",description:"To ensure a smooth swapping experience for traders during the beta period, the set of Quoters will be vetted by Uniswap Labs following UniswapX\u2019s launch, with plans to make the quoting system fully permissionless in the near future.",source:"@site/docs/contracts/uniswapx/guides/becomeQuoter.md",sourceDirName:"contracts/uniswapx/guides",slug:"/contracts/uniswapx/guides/becomequoter",permalink:"/uniswap-docs/en/contracts/uniswapx/guides/becomequoter",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/uniswapx/guides/becomeQuoter.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"becomequoter",title:"Become a Quoter",sidebar_position:2},sidebar:"contractsSidebar",previous:{title:"Filling on Mainnet",permalink:"/uniswap-docs/en/contracts/uniswapx/guides/createfiller"},next:{title:"Webhook Support",permalink:"/uniswap-docs/en/contracts/uniswapx/guides/webhooks"}},u={},l=[{value:"Performance Expectations",id:"performance-expectations",level:2},{value:"RFQ API Schema",id:"rfq-api-schema",level:2}],p={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quoting-during-uniswapx-beta"},"Quoting During UniswapX Beta"),(0,o.kt)("p",null,"To ensure a smooth swapping experience for traders during the beta period, the set of Quoters will be vetted by Uniswap Labs following UniswapX\u2019s launch, with plans to make the quoting system fully permissionless in the near future."),(0,o.kt)("p",null,"Once you've been approved to be a quoter by the Uniswap Labs team follow the instructions below to complete your integration. If you have not been approved, please join the waitlist by filling out our ",(0,o.kt)("a",{parentName:"p",href:"https://uniswap.typeform.com/to/UiPDKgY6"},"intake form"),"."),(0,o.kt)("h1",{id:"integrating-with-uniswapx-rfq"},"Integrating with UniswapX RFQ"),(0,o.kt)("p",null,"To participate as quoters, fillers must host a service that adheres to the UniswapX RFQ API schema (below) and responds to requests with quotes. The RFQ participant who submits the best quote for a given order will receive exclusive rights to fill it using their Executor during the ",(0,o.kt)("em",{parentName:"p"},"Exclusivity Period")," of the auction."),(0,o.kt)("h2",{id:"performance-expectations"},"Performance Expectations"),(0,o.kt)("p",null,"During the UniswapX beta period, quoters will be expected to uphold the following standards to assure a fair auction process and the best experience for swappers. Any quoters who drop below these expectations are subject to suspension or removal from the UniswapX beta: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"500ms Response Time:")," When a quoter receives a request for quote, their server should respond within 500ms with either a quote for the trade or a 204 response code"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"90% Rolling Fill Rate:")," When a quoter wins an auction, meaning their contract address is in the ",(0,o.kt)("inlineCode",{parentName:"li"},"exclusiveFiller")," field of an order, they are required to fill that order >90% of the time. We'll measure this on a rolling 7-day day period.")),(0,o.kt)("h2",{id:"rfq-api-schema"},"RFQ API Schema"),(0,o.kt)("p",null,"To successfully receive and respond to UniswapX RFQ Quotes, you must have a publicly accessible endpoint that receives incoming quote requests and responds with quotes by implementing the following schema:"),(0,o.kt)("p",null,"Request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'method: POST\ncontent-type: application/json\ndata: {\n    requestId: "string uuid - a unique identifier for swapper\'s request",\n    tokenInChainId: "number - the `tokenIn` chainId",\n    tokenOutChainId: "number - the `tokenOut` chainId",\n    swapper: "string address - The swapper\u2019s EOA address that will sign the order",\n    tokenIn: "string address - The ERC20 token that the swapper will provide",\n    tokenOut: "string address - The ERC20 token that the swapper will receive",\n    amount: "string number - If the trade type is exact input then this is amount of `tokenIn` the user wants to swap otherwise this is amount of tokenOut the user wants to receive",\n    type: "number - This is either `EXACT_INPUT` or `EXACT_OUTPUT`",\n    quoteId: "string uuid - a unique identifier for the quote an integrator is sending back"\n}\n')),(0,o.kt)("p",null,"Response (status 200 - OK):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    chainId: "number - the chainId for the quoted token",\n    amountIn: "string number - If the request type is exact input then this field is `amount` from the quote request, otherwise this is the provided quote",\n    amountOut: "string number - If the request type is exact output then this field is `amount` from the quote request, otherwise this is the provided quote",\n    filler: "string address - The executor address that you would like to have last-look exclusivity for this order"\n\n    { ...The following fields should be echoed from the quote request...},\n    requestId: "string uuid - a unique identifier for this quote request",\n    swapper: "string address - The swapper\u2019s EOA address that will sign the order",\n    tokenIn: "string address - The ERC20 token that the swapper will provide",\n    tokenOut: "string address - The ERC20 token that the swapper will receive",\n    quoteId: "string uuid - a unique identifier for the quote an integrator is sending back"\n}\n')),(0,o.kt)("p",null,"There is a latency requirement on responses from registered endpoints. Currently set to 500ms, but is subject to change. If you do not wish to respond to a quote request, you must return an empty response with status code\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"204"),"."),(0,o.kt)("h1",{id:"requirements-for-moving-to-prod"},"Requirements for Moving to Prod"),(0,o.kt)("p",null,"All new quoter instances will start by being onboarded to our ",(0,o.kt)("a",{parentName:"p",href:"https://beta.api.uniswap.org/v2/uniswapx/docs"},"Beta environment"),", where they will need to demonstrate at least ",(0,o.kt)("strong",{parentName:"p"},"5 valid Exclusive RFQ fills")," in order to be moved to production. The ",(0,o.kt)("a",{parentName:"p",href:"https://beta.api.uniswap.org/v2/uniswapx/docs"},"Beta environment")," serves valid mainnet orders that should be filled against production contracts, it just does not receive traffic from any production interfaces. "),(0,o.kt)("p",null,"To begin testing in beta quoters will need to: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Provide their quote server URL")," to your Uniswap Labs contact along with the contract address you\u2019re using to fill. We recommend that this be the same quoting infrastructure that you plan to run in production. "),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"(Optional) Provide notification webhook URL")," to you Uniswap Labs contact. We\u2019ll set up notifications of won orders to be served there. Alternatively, you can poll the ",(0,o.kt)("a",{parentName:"li",href:"https://beta.api.uniswap.org/v2/uniswapx/docs"},"Beta /orders Endpoint")," for won orders. "),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Begin sending quotes and orders to beta")," via the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Uniswap/uniswapx-tool?tab=readme-ov-file#simple-order-creation"},"UniswapX CLI"),". "),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Send hashes of 5 filled transactions")," that demonstrate that the integration was able to fill during the exclusive period; specifically before ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Uniswap/UniswapX/blob/abd7a0b080148fc42ef7c86536d14de714eec4c7/src/lib/ExclusiveDutchOrderLib.sol#L12"},"decayStartTime"))),(0,o.kt)("p",null,"The Uniswap Labs team will review the 5 transactions to confirm they were successful exclusive fills. Once they are confirmed, the quoters setup will be promoted to production and will start receiving traffic."))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=o,m=d["".concat(u,".").concat(h)]||d[h]||c[h]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);