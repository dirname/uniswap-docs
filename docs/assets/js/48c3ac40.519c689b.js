"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[4936],{56799:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=t(83117),o=(t(67294),t(3905));const r={id:"the-full-contract",title:"\u5b8c\u6574\u7684\u5408\u7ea6",sidebar_position:6},a=void 0,s={unversionedId:"contracts/v3/guides/providing-liquidity/the-full-contract",id:"contracts/v3/guides/providing-liquidity/the-full-contract",title:"\u5b8c\u6574\u7684\u5408\u7ea6",description:"\u4ee5\u4e0b\u662f\u5b8c\u6574\u529f\u80fd\u4ee3\u7801\u793a\u4f8b\uff1a\u4e00\u4e2a\u80fd\u591f\u6258\u7ba1 Uniswap V3 \u4ed3\u4f4d NFT \u5e76\u901a\u8fc7\u6536\u53d6\u8d39\u7528\u3001\u589e\u52a0\u6216\u51cf\u5c11\u6d41\u52a8\u6027\u4ee5\u53ca\u94f8\u9020\u65b0\u4ed3\u4f4d\u6765\u64cd\u4f5c\u5176\u4e2d\u7684\u4ed3\u4f4d\u548c\u6d41\u52a8\u6027\u7684\u5408\u7ea6\u3002\u5728 Github \u4e0a\u67e5\u770b \u8fd9\u91cc\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/contracts/v3/guides/providing-liquidity/the-full-contract.md",sourceDirName:"contracts/v3/guides/providing-liquidity",slug:"/contracts/v3/guides/providing-liquidity/the-full-contract",permalink:"/uniswap-docs/contracts/v3/guides/providing-liquidity/the-full-contract",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v3/guides/providing-liquidity/the-full-contract.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"the-full-contract",title:"\u5b8c\u6574\u7684\u5408\u7ea6",sidebar_position:6},sidebar:"contractsSidebar",previous:{title:"\u589e\u52a0\u6d41\u52a8\u6027",permalink:"/uniswap-docs/contracts/v3/guides/providing-liquidity/increase-liquidity"},next:{title:"\u6982\u89c8",permalink:"/uniswap-docs/contracts/v3/guides/liquidity-mining/overview"}},u={},d=[],c={toc:d};function l(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,i.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4ee5\u4e0b\u662f\u5b8c\u6574\u529f\u80fd\u4ee3\u7801\u793a\u4f8b\uff1a\u4e00\u4e2a\u80fd\u591f\u6258\u7ba1 Uniswap V3 \u4ed3\u4f4d NFT \u5e76\u901a\u8fc7\u6536\u53d6\u8d39\u7528\u3001\u589e\u52a0\u6216\u51cf\u5c11\u6d41\u52a8\u6027\u4ee5\u53ca\u94f8\u9020\u65b0\u4ed3\u4f4d\u6765\u64cd\u4f5c\u5176\u4e2d\u7684\u4ed3\u4f4d\u548c\u6d41\u52a8\u6027\u7684\u5408\u7ea6\u3002\u5728 Github \u4e0a\u67e5\u770b ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-docs/blob/main/examples/smart-contracts/LiquidityExamples.sol"},"\u8fd9\u91cc"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '../libraries/TransferHelper.sol';\nimport '../interfaces/INonfungiblePositionManager.sol';\nimport '../base/LiquidityManagement.sol';\n\ncontract LiquidityExamples is IERC721Receiver {\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    uint24 public constant poolFee = 3000;\n\n    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n    /// @notice \u4ee3\u8868 NFT \u7684\u5b58\u6b3e\n    struct Deposit {\n        address owner;\n        uint128 liquidity;\n        address token0;\n        address token1;\n    }\n\n    /// @dev deposits[tokenId] => Deposit\n    mapping(uint256 => Deposit) public deposits;\n\n    constructor(\n        INonfungiblePositionManager _nonfungiblePositionManager\n    ) {\n        nonfungiblePositionManager = _nonfungiblePositionManager;\n    }\n\n    // \u5b9e\u73b0 `onERC721Received`\uff0c\u4ee5\u4fbf\u6b64\u5408\u7ea6\u53ef\u4ee5\u63a5\u6536 erc721 \u4ee3\u5e01\u7684\u6258\u7ba1\n    function onERC721Received(\n        address operator,\n        address,\n        uint256 tokenId,\n        bytes calldata\n    ) external override returns (bytes4) {\n        // \u83b7\u53d6\u4ed3\u4f4d\u4fe1\u606f\n\n        _createDeposit(operator, tokenId);\n\n        return this.onERC721Received.selector;\n    }\n\n    function _createDeposit(address owner, uint256 tokenId) internal {\n        (, , address token0, address token1, , , , uint128 liquidity, , , , ) =\n            nonfungiblePositionManager.positions(tokenId);\n\n        // \u8bbe\u7f6e\u4ed3\u4f4d\u7684\u6240\u6709\u8005\u548c\u6570\u636e\n        // operator \u662f msg.sender\n        deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1});\n    }\n\n    /// @notice \u8c03\u7528\u5916\u56f4\u5b9a\u4e49\u7684 mint \u51fd\u6570\uff0c\u4ee5\u76f8\u540c\u6570\u91cf\u7684\u6bcf\u4e2a\u4ee3\u5e01\u8fdb\u884c\u94f8\u9020\u3002\n    /// \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4e3a DAI \u548c USDC \u63d0\u4f9b\u4e86 1000 \u7684\u6d41\u52a8\u6027\n    /// @return tokenId \u65b0\u94f8 ERC721 \u7684 ID\n    /// @return liquidity \u4ed3\u4f4d\u7684\u6d41\u52a8\u6027\u91cf\n    /// @return amount0 \u4ee3\u5e010\u7684\u6570\u91cf\n    /// @return amount1 \u4ee3\u5e011\u7684\u6570\u91cf\n    function mintNewPosition()\n        external\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        // \u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u4e3a\u4e24\u79cd\u8d44\u4ea7\u63d0\u4f9b\u76f8\u7b49\u7684\u6d41\u52a8\u6027\u91cf\u3002\n        // \u5411\u4e24\u79cd\u8d44\u4ea7\u63d0\u4f9b\u6d41\u52a8\u6027\u610f\u5473\u7740\u6d41\u52a8\u6027\u5c06\u8d5a\u53d6\u8d39\u7528\uff0c\u5e76\u88ab\u8ba4\u4e3a\u5728\u8303\u56f4\u5185\u3002\n        uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\n\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5408\u7ea6\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amount0ToMint);\n        TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amount1ToMint);\n\n        // \u6279\u51c6\u4ed3\u4f4d\u7ba1\u7406\u5668\n        TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount0ToMint);\n        TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount1ToMint);\n\n        INonfungiblePositionManager.MintParams memory params =\n            INonfungiblePositionManager.MintParams({\n                token0: DAI,\n                token1: USDC,\n                fee: poolFee,\n                tickLower: TickMath.MIN_TICK,\n                tickUpper: TickMath.MAX_TICK,\n                amount0Desired: amount0ToMint,\n                amount1Desired: amount1ToMint,\n                amount0Min: 0,\n                amount1Min: 0,\n                recipient: address(this),\n                deadline: block.timestamp\n            });\n\n        // \u6ce8\u610f\uff0c\u7531 DAI/USDC \u548c 0.3% \u8d39\u7387\u5c42\u7ea7\u5b9a\u4e49\u7684\u6c60\u5fc5\u987b\u5df2\u7ecf\u521b\u5efa\u5e76\u521d\u59cb\u5316\u624d\u80fd\u8fdb\u884c\u94f8\u9020\n        (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);\n\n        // \u521b\u5efa\u4e00\u4e2a\u5b58\u6b3e\n        _createDeposit(msg.sender, tokenId);\n\n        // \u53d6\u6d88\u6279\u51c6\u5e76\u9000\u8fd8\u4e24\u79cd\u8d44\u4ea7\u3002\n        if (amount0 < amount0ToMint) {\n            TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0);\n            uint256 refund0 = amount0ToMint - amount0;\n            TransferHelper.safeTransfer(DAI, msg.sender, refund0);\n        }\n\n        if (amount1 < amount1ToMint) {\n            TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0);\n            uint256 refund1 = amount1ToMint - amount1;\n            TransferHelper.safeTransfer(USDC, msg.sender, refund1);\n        }\n    }\n\n    /// @notice \u6536\u96c6\u4e0e\u63d0\u4f9b\u7684\u6d41\u52a8\u6027\u76f8\u5173\u7684\u8d39\u7528\n    /// @dev \u5408\u7ea6\u5fc5\u987b\u6301\u6709 erc721 \u4ee3\u5e01\u624d\u80fd\u6536\u96c6\u8d39\u7528\n    /// @param tokenId erc721 \u4ee3\u5e01\u7684 ID\n    /// @return amount0 \u4ee3\u5e010\u6536\u96c6\u5230\u7684\u8d39\u7528\u91d1\u989d\n    /// @return amount1 \u4ee3\u5e011\u6536\u96c6\u5230\u7684\u8d39\u7528\u91d1\u989d\n    function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\n        // \u8c03\u7528\u8005\u5fc5\u987b\u62e5\u6709 ERC721 \u4ed3\u4f4d\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u5b58\u6b3e\n\n        // \u5c06 amount0Max \u548c amount1Max \u8bbe\u7f6e\u4e3a uint256.max \u6765\u6536\u96c6\u6240\u6709\u8d39\u7528\n        // \u6216\u8005\u53ef\u4ee5\u5c06 recipient \u8bbe\u7f6e\u4e3a msg.sender \u4ee5\u907f\u514d\u5728 `sendToOwner` \u4e2d\u7684\u53e6\u4e00\u7b14\u4ea4\u6613\n        INonfungiblePositionManager.CollectParams memory params =\n            INonfungiblePositionManager.CollectParams({\n                tokenId: tokenId,\n                recipient: address(this),\n                amount0Max: type(uint128).max,\n                amount1Max: type(uint128).max\n            });\n\n        (amount0, amount1) = nonfungiblePositionManager.collect(params);\n\n        // \u5c06\u6536\u96c6\u5230\u7684\u8d39\u7528\u9001\u56de\u7ed9\u6240\u6709\u8005\n        _sendToOwner(tokenId, amount0, amount1);\n    }\n\n    /// @notice \u4e00\u4e2a\u5c06\u5f53\u524d\u6d41\u52a8\u6027\u51cf\u534a\u7684\u529f\u80fd\u3002\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u8c03\u7528\u5916\u56f4\u5b9a\u4e49\u7684 `decreaseLiquidity` \u51fd\u6570\u3002\n    /// @param tokenId erc721 \u4ee3\u5e01\u7684 ID\n    /// @return amount0 \u8fd4\u56de\u7684\u4ee3\u5e010\u91d1\u989d\n    /// @return amount1 \u8fd4\u56de\u7684\u4ee3\u5e011\u91d1\u989d\n    function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\n        // \u8c03\u7528\u8005\u5fc5\u987b\u662f NFT \u7684\u6240\u6709\u8005\n        require(msg.sender == deposits[tokenId].owner, 'Not the owner');\n        // \u83b7\u53d6 tokenId \u7684\u6d41\u52a8\u6027\u6570\u636e\n        uint128 liquidity = deposits[tokenId].liquidity;\n        uint128 halfLiquidity = liquidity / 2;\n\n        // amount0Min \u548c amount1Min \u662f\u4ef7\u683c\u6ed1\u70b9\u68c0\u67e5\n        // \u5982\u679c\u71c3\u70e7\u540e\u6536\u5230\u7684\u91d1\u989d\u4e0d\u5927\u4e8e\u8fd9\u4e9b\u6700\u5c0f\u503c\uff0c\u4ea4\u6613\u5c06\u5931\u8d25\n        INonfungiblePositionManager.DecreaseLiquidityParams memory params =\n            INonfungiblePositionManager.DecreaseLiquidityParams({\n                tokenId: tokenId,\n                liquidity: halfLiquidity,\n                amount0Min: 0,\n                amount1Min: 0,\n                deadline: block.timestamp\n            });\n\n        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);\n\n        // \u53d1\u9001\u6d41\u52a8\u6027\u56de\u7ed9\u6240\u6709\u8005\n        _sendToOwner(tokenId, amount0, amount1);\n    }\n\n    /// @notice \u589e\u52a0\u5f53\u524d\u8303\u56f4\u5185\u7684\u6d41\u52a8\u6027\n    /// @dev \u6c60\u5fc5\u987b\u5df2\u7ecf\u521d\u59cb\u5316\u624d\u80fd\u6dfb\u52a0\u6d41\u52a8\u6027\n    /// @param tokenId erc721 \u4ee3\u5e01\u7684 ID\n    /// @param amount0 \u8981\u6dfb\u52a0\u7684 token0 \u6570\u91cf\n    /// @param amount1 \u8981\u6dfb\u52a0\u7684 token1 \u6570\u91cf\n    function increaseLiquidityCurrentRange(\n        uint256 tokenId,\n        uint256 amountAdd0,\n        uint256 amountAdd1\n    )\n        external\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        ) {\n\n        TransferHelper.safeTransferFrom(deposits[tokenId].token0, msg.sender, address(this), amountAdd0);\n        TransferHelper.safeTransferFrom(deposits[tokenId].token1, msg.sender, address(this), amountAdd1);\n\n        TransferHelper.safeApprove(deposits[tokenId].token0, address(nonfungiblePositionManager), amountAdd0);\n        TransferHelper.safeApprove(deposits[tokenId].token1, address(nonfungiblePositionManager), amountAdd1);\n\n        INonfungiblePositionManager.IncreaseLiquidityParams memory params = INonfungiblePositionManager.IncreaseLiquidityParams({\n            tokenId: tokenId,\n            amount0Desired: amountAdd0,\n            amount1Desired: amountAdd1,\n            amount0Min: 0,\n            amount1Min: 0,\n            deadline: block.timestamp\n        });\n\n        (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params);\n\n    }\n\n    /// @notice \u5c06\u8d44\u91d1\u8f6c\u79fb\u7ed9 NFT \u7684\u6240\u6709\u8005\n    /// @param tokenId erc721 \u7684 ID\n    /// @param amount0 \u4ee3\u5e010\u7684\u6570\u91cf\n    /// @param amount1 \u4ee3\u5e011\u7684\u6570\u91cf\n    function _sendToOwner(\n        uint256 tokenId,\n        uint256 amount0,\n        uint256 amount1\n    ) internal {\n        // \u83b7\u53d6\u5408\u7ea6\u7684\u6240\u6709\u8005\n        address owner = deposits[tokenId].owner;\n\n        address token0 = deposits[tokenId].token0;\n        address token1 = deposits[tokenId].token1;\n        // \u53d1\u9001\u6536\u96c6\u5230\u7684\u8d39\u7528\u7ed9\u6240\u6709\u8005\n        TransferHelper.safeTransfer(token0, owner, amount0);\n        TransferHelper.safeTransfer(token1, owner, amount1);\n    }\n\n    /// @notice \u5c06 NFT \u8f6c\u79fb\u7ed9\u6240\u6709\u8005\n    /// @param tokenId erc721 \u7684 ID\n    function retrieveNFT(uint256 tokenId) external {\n        // \u5fc5\u987b\u662f NFT \u7684\u6240\u6709\u8005\n        require(msg.sender == deposits[tokenId].owner, 'Not the owner');\n        // \u5c06\u6240\u6709\u6743\u8f6c\u79fb\u7ed9\u539f\u59cb\u6240\u6709\u8005\n        nonfungiblePositionManager.safeTransferFrom(address(this), msg.sender, tokenId);\n        // \u5220\u9664\u4e0e tokenId \u76f8\u5173\u7684\u4fe1\u606f\n        delete deposits[tokenId];\n    }\n}\n")))}l.isMDXComponent=!0},3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>p});var i=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,i,o=function(n,e){if(null==n)return{};var t,i,o={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var u=i.createContext({}),d=function(n){var e=i.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=d(n.components);return i.createElement(u.Provider,{value:e},n.children)},l={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,u=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),m=d(t),p=o,f=m["".concat(u,".").concat(p)]||m[p]||l[p]||r;return t?i.createElement(f,a(a({ref:e},c),{},{components:t})):i.createElement(f,a({ref:e},c))}));function p(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var r=t.length,a=new Array(r);a[0]=m;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=n,s.mdxType="string"==typeof n?n:o,a[1]=s;for(var d=2;d<r;d++)a[d]=t[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);